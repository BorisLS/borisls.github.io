<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fußball on Blog von Boris Luetke Schelhowe</title>
    <link>https://borisls.github.io/tags/fu%C3%9Fball/</link>
    <description>Recent content in Fußball on Blog von Boris Luetke Schelhowe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Boris Luetke Schelhowe</copyright>
    <lastBuildDate>Fri, 01 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://borisls.github.io/tags/fu%C3%9Fball/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web Scraping von Fußballergebnissen mit R und rvest</title>
      <link>https://borisls.github.io/2017/09/01/2017-09-01-webscraping-fussball/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://borisls.github.io/2017/09/01/2017-09-01-webscraping-fussball/</guid>
      <description>Web Scraping von Fußballergebnissen mit R und rvestUse CaseFür das trainieren von Vorhersagemodellen werden Daten benötigt. Eine Möglichkeit für die Generierung von Daten ist das sogenannte Web Scraping bzw. Web Data Harvesting. Hierbei werden Daten von Websites extrahiert und in ein “maschinen-freundliches” Format lokal zur Verfügung gestellt.
Für Python gibt es für diese Aufgabe die library BeautifulSoup und für R existiert u.a. das Package rvest. In diesem Beitrag wird eine praktische Anwendung von rvest dargestellt.</description>
    </item>
    
  </channel>
</rss>